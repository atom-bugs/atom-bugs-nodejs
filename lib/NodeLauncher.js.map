{"version":3,"file":"NodeLauncher.js","sourceRoot":"","sources":["../src/NodeLauncher.ts"],"names":[],"mappings":"AAAA,WAAW,CAAC;;;AAMN,IAAA,oBAA+E,EAA7E,oCAAe,EAAE,4CAAmB,EAAE,0BAAU,EAAE,oBAAO,CAAqB;AAItF;IAGE;QADQ,YAAO,GAAG,IAAI,OAAO,EAAE,CAAC;IAGhC,CAAC;IACD,4BAAS,GAAT,UAAW,EAAY;QACrB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IACxC,CAAC;IACD,wBAAK,GAAL,UAAO,OAAe,EAAE,IAAmB,EAAE,OAAa;QAA1D,iBAYC;QAXC,IAAI,CAAC,OAAO,GAAG,IAAI,eAAe,CAAC;YACjC,OAAO,SAAA;YACP,IAAI,MAAA;YACJ,MAAM,YAAE,MAAM;gBACZ,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACtB,CAAC;YACD,MAAM,YAAE,MAAM;gBACZ,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACtB,CAAC;YACD,IAAI,EAAE,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAd,CAAc;SAC/B,CAAC,CAAC;IACL,CAAC;IACD,sBAAG,GAAH,UAAK,IAAa;QAChB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;IACH,eAAC;AAAD,CAAC,AA5BD,IA4BC;AA5BY,4BAAQ","sourcesContent":["'use babel';\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nconst { BufferedProcess, CompositeDisposable, Disposable, Emitter } = require('atom');\nimport { NodeDebugger } from './NodeDebugger';\nimport { Domains }  from 'chrome-debugging-protocol';\n\nexport class Launcher {\n  private process: any;\n  private emitter = new Emitter();\n  constructor () {\n\n  }\n  onDidExit (cb: Function) {\n    return this.emitter.on('didExit', cb);\n  }\n  start (command: string, args: Array<string>, options?: any) {\n    this.process = new BufferedProcess({\n      command,\n      args,\n      stdout (output) {\n        console.log(output);\n      },\n      stderr (output) {\n        console.log(output);\n      },\n      exit: (code) => this.end(code)\n    });\n  }\n  end (code?: number) {\n    if (this.process) {\n      this.process.kill();\n    }\n    this.emitter.emit('onDidExit', code);\n  }\n}\n"]}