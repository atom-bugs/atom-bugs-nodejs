{"version":3,"file":"node-launcher.js","sourceRoot":"","sources":["../../src/plugin/node-launcher.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter }  from 'events'\nimport { spawn, ChildProcess } from 'child_process'\nimport { request } from 'http'\nimport { type, arch } from 'os'\nimport { dirname } from 'path'\n\nexport interface Page {\n  type: string,\n  url: string,\n  webSocketDebuggerUrl?: string\n}\n\nexport type Pages = Array<Page>\n\nexport class NodeLauncher {\n\n  public portNumber: number\n  public hostName: string\n  public binaryPath: string\n  public launchArguments: Array<string>\n  public environmentVariables: Object\n  public cwd: string\n  public scriptPath: string\n\n  private process: ChildProcess\n  private maxAttempts: number = 3\n  private attempt: number = 0\n  private events: EventEmitter = new EventEmitter()\n  // Events\n  didStop (cb) {\n    this.events.on('didStop', cb)\n  }\n  didFail (cb) {\n    this.events.on('didFail', cb)\n  }\n  didReceiveOutput(cb) {\n    this.events.on('didReceiveOutput', cb)\n  }\n  didReceiveError(cb) {\n    this.events.on('didReceiveError', cb)\n  }\n  normalizePath (dir) {\n    return dir.replace(/^~/, process.env.HOME)\n  }\n  // Actions\n  stop () {\n    this.process.kill()\n    this.process = null\n    this.events.emit('didStop')\n  }\n  async start (): Promise<string> {\n    let launchArgs = [\n      `--inspect`,\n      `--debug-brk=${this.portNumber}`,\n      this.normalizePath(this.scriptPath)\n    ].concat(this.launchArguments)\n    let options = {\n      detached: true,\n      shell: true,\n      cwd: this.cwd || this.normalizePath(dirname(this.scriptPath)),\n      env: this.environmentVariables\n    }\n    let output = ''\n    // kill if already running\n    if (this.process) {\n      await this.stop()\n    }\n    // process\n    this.process = spawn(this.binaryPath, launchArgs, options)\n    this.process.stdout.setEncoding('utf8')\n    this.process.stderr.setEncoding('utf8')\n    this.process.stdout.on('data', (res: Uint8Array) => {\n      this.events.emit('didReceiveOutput', res.toString())\n    })\n    this.process.stderr.on('data', (res: Uint8Array) => {\n      output = output.concat(res.toString())\n      this.events.emit('didReceiveError', res)\n    })\n    this.process.stdout.on('end', (res: Uint8Array) => this.events.emit('didReceiveOutput', res))\n    this.process.stderr.on('end', (res: Uint8Array) => this.events.emit('didReceiveError', res))\n    this.process.on('close', (code: number) => {\n      if (code !== 0) {\n        this.events.emit('didFail')\n      }\n      this.events.emit('didStop')\n    })\n    return this.findSocketUrl()\n  }\n  getPages (): Promise<Pages> {\n    return new Promise((resolve, reject) => {\n      let req = request({\n        hostname: this.hostName,\n        port: this.portNumber,\n        path: '/json',\n        method: 'GET'\n      }, (res) => {\n        res.setEncoding('utf8')\n        res.on('data', (chunk) => {\n          try {\n            resolve(JSON.parse(String(chunk)) as Pages)\n          } catch (e) {\n            reject(e)\n          }\n        })\n      })\n      req.on('error', reject)\n      req.end()\n    })\n  }\n  findSocketUrl (): Promise<string> {\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        let pages = await this\n          .getPages()\n          .catch(() => {\n            if (this.attempt <= this.maxAttempts) {\n              resolve(this.findSocketUrl())\n            } else {\n              reject('unable to get pages')\n            }\n          })\n        let found = (pages || []).find((page: Page) => {\n          return Boolean(page.webSocketDebuggerUrl)\n        })\n        if (found) {\n          resolve(found.webSocketDebuggerUrl)\n        } else {\n          reject('unable to find page with socket')\n        }\n      }, 500)\n    })\n  }\n}\n"]}