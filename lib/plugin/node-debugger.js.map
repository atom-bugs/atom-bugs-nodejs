{"version":3,"file":"node-debugger.js","sourceRoot":"","sources":["../../src/plugin/node-debugger.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mEAAwF;AAExF;IAAkC,gCAA+B;IAE/D;QAAA,YACE,iBAAO,SACR;QAHM,oBAAc,GAAY,IAAI,CAAA;;IAGrC,CAAC;IACK,iCAAU,GAAhB,UAAkB,OAAO;;;gBACjB,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI;;;;mCAAK,OAAO,qBAAP,OAAO,qBAAP,OAAO,kBAAP,OAAO;wBACnD,QAAQ,CAAC,MAAM,CAAC,UAAC,MAAM;4BACrB,EAAE,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gCACxB,QAAQ,CAAC,MAAM,EAAE,CAAA;gCACjB,KAAI,CAAC,cAAc,GAAG,KAAK,CAAA;4BAC7B,CAAC;wBACH,CAAC,CAAC,CAAA;wBACK,qBAAM,OAAO,CAAC,GAAG,CAAC;gCACvB,OAAO,CAAC,MAAM,EAAE;gCAChB,QAAQ,CAAC,MAAM,EAAE;gCACjB,QAAQ,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;gCAChD,QAAQ,CAAC,sBAAsB,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;gCAChD,QAAQ,CAAC,oBAAoB,CAAC;oCAC5B,MAAM,EAAE,IAAI;iCACb,CAAC;gCACF,QAAQ,CAAC,MAAM,EAAE;gCACjB,QAAQ,CAAC,mBAAmB,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC;gCAC/C,QAAQ,CAAC,mBAAmB,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;gCAC9C,OAAO,CAAC,uBAAuB,EAAE;6BAClC,CAAC,EAAA;4BAZF,sBAAO,SAYL,EAAA;;;;KACH;IACH,mBAAC;AAAD,CAAC,AA3BD,CAAkC,0CAA+B,GA2BhE;AA3BY,oCAAY","sourcesContent":["import { ChromeDebuggingProtocolDebugger } from 'atom-bugs-chrome-debugger/lib/debugger'\n\nexport class NodeDebugger extends ChromeDebuggingProtocolDebugger {\n  public skipFirstPause: boolean = true\n  constructor () {\n    super()\n  }\n  async didConnect (domains): Promise<any> {\n    var { Profiler, Runtime, Debugger, Page } = domains\n    Debugger.paused((params) => {\n      if (this.skipFirstPause) {\n        Debugger.resume()\n        this.skipFirstPause = false\n      }\n    })\n    return await Promise.all([\n      Runtime.enable(),\n      Debugger.enable(),\n      Debugger.setPauseOnExceptions({ state: 'none' }),\n      Debugger.setAsyncCallStackDepth({ maxDepth: 0 }),\n      Debugger.setBreakpointsActive({\n        active: true\n      }),\n      Profiler.enable(),\n      Profiler.setSamplingInterval({ interval: 100 }),\n      Debugger.setBlackboxPatterns({ patterns: [] }),\n      Runtime.runIfWaitingForDebugger()\n    ])\n  }\n}\n"]}