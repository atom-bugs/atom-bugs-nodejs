{"version":3,"file":"node-debugger.js","sourceRoot":"","sources":["../../src/plugin/node-debugger.ts"],"names":[],"mappings":"","sourcesContent":["// import { ChromeDebuggingProtocolDebugger } from 'xatom-debug-chrome-base/lib/debugger'\n//\n// export class NodeDebugger extends ChromeDebuggingProtocolDebugger {\n//   constructor () {\n//     super()\n//   }\n//   async didConnect (domains): Promise<any> {\n//     var { Profiler, Runtime, Debugger, Page } = domains\n//     return await Promise.all([\n//       Runtime.enable(),\n//       Debugger.enable(),\n//       Debugger.setPauseOnExceptions({ state: 'none' }),\n//       Debugger.setAsyncCallStackDepth({ maxDepth: 0 }),\n//       Debugger.setBreakpointsActive({\n//         active: true\n//       }),\n//       Profiler.enable(),\n//       Profiler.setSamplingInterval({ interval: 100 }),\n//       Debugger.setBlackboxPatterns({ patterns: [] }),\n//       Runtime.runIfWaitingForDebugger()\n//     ])\n//   }\n// }\n"]}