{"version":3,"file":"DebuggerProtocolClient.js","sourceRoot":"","sources":["../lib/DebuggerProtocolClient.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel';\n\nimport { request } from 'http';\nimport { EventEmitter }  from 'events';\n\nexport interface DebuggerBreakpoint {\n  id: number,\n  url: string,\n  columnNumber: number,\n  lineNumber: number\n}\n\nexport class DebuggerProtocolClient extends EventEmitter {\n\n  private connected: boolean = false;\n  private paused: boolean = false;\n  private client: WebSocket;\n  private nextRequestId: number = 0;\n  private retry: number = 0;\n  private breakpoints: Array<DebuggerBreakpoint> = [];\n  private scripts: Array<any> = [];\n  private callFrames: Array<any> = [];\n  private subscriptions:{\n    resolve: any,\n    reject: any\n  }[] = [];\n\n  public isConnected () {\n    return this.connected;\n  }\n\n  public isPaused () {\n    return this.paused;\n  }\n\n  public disconnect () {\n    this.client = null;\n    this.paused = false;\n    this.connected = false;\n  }\n\n  public send (method, params?) {\n    return new Promise((resolve, reject) => {\n      let requestBody = {\n        id: this.nextRequestId, //(new Date().getTime()).toString(36),\n        method: method\n      }\n      if (params) {\n        requestBody['params'] = params\n      }\n      this.subscriptions[requestBody.id] = {\n        resolve: resolve,\n        reject: reject\n      }\n      this.client.send(JSON.stringify(requestBody));\n      this.nextRequestId++;\n    })\n  }\n\n  private getSocketTarget (hostname: string, port: number): Promise<string> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let req = request({\n          hostname,\n          port,\n          path: '/json',\n          method: 'GET'\n        }, (res) => {\n          res.setEncoding('utf8')\n          res.on('data', (chunk) => {\n            try {\n              let targets = JSON.parse(String(chunk))\n              let socketUrl = false;\n              targets.forEach((target) => {\n                if (target.webSocketDebuggerUrl) {\n                  socketUrl = target.webSocketDebuggerUrl\n                }\n              })\n              socketUrl ? resolve(socketUrl) : reject('Could not find socket url.');\n            } catch (e) {\n              reject(e);\n            }\n          })\n        });\n        req.on('error', reject);\n        req.end();\n      }, 500)\n    })\n  }\n\n  async connect (hostname: string, port: number) {\n    this.retry++;\n    let target = await this\n      .getSocketTarget(hostname, port)\n      .then((socketUrl: string) => {\n        return new Promise((resolve, reject) => {\n          this.nextRequestId = 0;\n          this.connected = false;\n          this.client = new WebSocket(socketUrl);\n          this.client.onerror = (error) => {\n            this.emit('error', error);\n            reject(error)\n          };\n          this.client.onopen = async () => {\n            await Promise\n              .all([\n                this.send('Runtime.enable'),\n                this.send('Debugger.enable'),\n                this.send('Debugger.setPauseOnExceptions', { state: 'none' }),\n                this.send('Debugger.setAsyncCallStackDepth', { maxDepth: 0 }),\n                this.send('Profiler.enable'),\n                this.send('Profiler.setSamplingInterval', { interval: 100 }),\n                this.send('Debugger.setBlackboxPatterns', { patterns: [] }),\n                this.send('Runtime.runIfWaitingForDebugger')\n              ])\n              .then(() => {\n                this.connected = true;\n                this.emit('start');\n              })\n            // await this.send('Debugger.resume');\n            resolve(this.connected);\n          };\n          this.client.onmessage = (message: MessageEvent) => {\n            let response = JSON.parse(message.data)\n            if (response.id > -1 && this.subscriptions[response.id]) {\n              let subscription = this.subscriptions[response.id];\n              if (response.result) {\n                subscription.resolve(response.result)\n              } else {\n                subscription.reject(response.error)\n              }\n            } else {\n              switch (response.method) {\n                case 'Debugger.paused': {\n                  this.paused = true;\n                  this.callFrames = response.params.callFrames;\n                  this.emit('pause', response.params);\n                } break;\n                case 'Debugger.resumed': {\n                  this.paused = false;\n                  this.emit('resume', response.params);\n                } break;\n                case 'Debugger.scriptParsed': {\n                  // do something\n                  this.scripts.push(response.params);\n                } break;\n                case 'Runtime.consoleAPICalled': {\n                  this.emit('console', response.params);\n                } break;\n                default:\n                  console.log(response);\n              }\n            }\n          }\n          this.client.onclose = () => {\n            this.emit('close');\n          };\n        });\n      })\n      .catch((message) => {\n        if (this.retry === 3) {\n          console.error(message);\n        }\n      });\n    if (target) {\n      return true;\n    } else if (this.retry < 3) {\n      return this.connect(hostname, port);\n    } else {\n      return false;\n    }\n  }\n\n  public reset () {\n    this.retry = 0;\n    this.breakpoints = [];\n    this.scripts = [];\n    this.subscriptions = [];\n  }\n\n  public resume () {\n    return this.send('Debugger.resume');\n  }\n\n  public pause () {\n    return this.send('Debugger.pause');\n  }\n\n  public stepOver () {\n    return this.send('Debugger.stepOver');\n  }\n\n  public stepInto () {\n    return this.send('Debugger.stepInto');\n  }\n\n  public stepOut () {\n    return this.send('Debugger.stepOut');\n  }\n\n  public getProperties (options) {\n    return this.send('Runtime.getProperties', options);\n  }\n\n  public evaluateOnFrames (expression: string, frames: Array<any>) {\n    return new Promise((resolve, reject) => {\n      if (frames.length > 0) {\n        let frame = frames.shift();\n        if (frame && frame.callFrameId) {\n          this\n            .send('Debugger.evaluateOnCallFrame', {\n              callFrameId: frame.callFrameId,\n              expression: expression\n            })\n            .then((result: any) => {\n              let lookOnParent = frames.length > 0 &&\n                result.result.subtype === 'error' &&\n                result.result.className !== 'SyntaxError';\n              if (lookOnParent) {\n                resolve(this.evaluateOnFrames(expression, frames))\n              } else if (result && !result.exceptionDetails) {\n                resolve(result);\n              } else {\n                reject(result);\n              }\n            });\n        } else {\n          reject('frame has no id');\n        }\n      } else {\n        reject('there are no frames to evaluate');\n      }\n    })\n  }\n\n  public evaluate (expression: string) {\n    let frames = [...(this.callFrames || [])];\n    return this.evaluateOnFrames(expression, frames);\n  }\n\n  public getScriptById (scriptId: number) {\n    return this.scripts.find((s) => {\n      return parseInt(s.scriptId) === scriptId;\n    })\n  }\n\n  public getCallStack () {\n    return this.callFrames.map((frame: any) => {\n      frame.location.script = this.getScriptById(parseInt(frame.location.scriptId));\n      return frame;\n    });\n  }\n\n  public getScope () {\n    return this.callFrames.map((frame: any) => {\n      frame.location.script = this.getScriptById(parseInt(frame.location.scriptId));\n      return frame;\n    });\n  }\n\n  public async addBreakpoint (url: string, lineNumber: number) {\n    return await this\n      .send('Debugger.setBreakpointByUrl', {\n        url,\n        lineNumber: (lineNumber - 1)\n      })\n      .then((response: any) => {\n        this.breakpoints.push({\n          id: response.breakpointId,\n          url,\n          columnNumber: 0,\n          lineNumber\n        } as DebuggerBreakpoint);\n      });\n  }\n\n  public getBreakpointById (id): Promise<DebuggerBreakpoint> {\n    return new Promise ((resolve, reject) => {\n      let found = this.breakpoints.find((b) => {\n        return (b.id === id);\n      });\n      resolve(found);\n    })\n  }\n\n  public removeBreakpoint (url: string, lineNumber: number) {\n    let breakpoint = this.breakpoints.find((b) => {\n      return (b.url === url && b.lineNumber === lineNumber);\n    });\n    if (breakpoint) {\n      return this.send('Debugger.removeBreakpoint', {\n        breakpointId: breakpoint.id\n      });\n    }\n  }\n}\n"]}